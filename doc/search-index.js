var searchIndex = {};
searchIndex['http_parser'] = {"items":[[0,"","http_parser","# The Rust HTTP Parser",null,null],[3,"HttpParser","","The HTTP parser that parses requests and responses.",null,null],[12,"http_version","","HTTP version of the request or response",0,null],[12,"errno","","Error number of there is an error in parsing",0,null],[12,"status_code","","Status code of the response",0,null],[12,"method","","HTTP method of the request",0,null],[12,"upgrade","","whether the protocol is upgraded",0,null],[12,"strict","","whether using strict parsing mode",0,null],[3,"HttpVersion","","HTTP protocol version.",null,null],[12,"major","","Major version",1,null],[12,"minor","","Minor version",1,null],[4,"HttpParserType","","`HttpParserType` is a type specifies whether the parser is going to parse a HTTP request,\nresponse or both.",null,null],[13,"Request","","Parse request",2,null],[13,"Response","","Parse response",2,null],[13,"Both","","Parse both",2,null],[4,"HttpErrno","","`HttpErrno` defines the encountered error during parsing.",null,null],[13,"CBMessageBegin","","Error happened in message begin callback",3,null],[13,"CBUrl","","Error happened in url callback",3,null],[13,"CBHeaderField","","Error happened in header field callback",3,null],[13,"CBHeaderValue","","Error happened in header value callback",3,null],[13,"CBHeadersComplete","","Error happened in headers complete callback",3,null],[13,"CBBody","","Error happened in body callback",3,null],[13,"CBMessageComplete","","Error happened in message complete callback",3,null],[13,"CBStatus","","Error happened in status callback",3,null],[13,"InvalidEofState","","Invalid EOF state",3,null],[13,"HeaderOverflow","","Header size is overflowed",3,null],[13,"ClosedConnection","","Connection is closed",3,null],[13,"InvalidVersion","","Invalid HTTP version",3,null],[13,"InvalidStatus","","Invalid HTTP status",3,null],[13,"InvalidMethod","","Invalid HTTP method",3,null],[13,"InvalidUrl","","Invalid URL",3,null],[13,"InvalidHost","","Invalid host",3,null],[13,"InvalidPort","","Invalid port",3,null],[13,"InvalidPath","","Invalid path",3,null],[13,"InvalidQueryString","","Invalid query string",3,null],[13,"InvalidFragment","","Invalid fragment",3,null],[13,"LFExpected","","Line feed is expected",3,null],[13,"InvalidHeaderToken","","Invalid header token",3,null],[13,"InvalidContentLength","","Invalid content length",3,null],[13,"InvalidChunkSize","","Invalid chunk size",3,null],[13,"InvalidConstant","","Invalid constant",3,null],[13,"InvalidInternalState","","Invalid internal state",3,null],[13,"Strict","","Error happened in strict mode",3,null],[13,"Paused","","Error happened when the parser is paused",3,null],[13,"Unknown","","Unkown error",3,null],[4,"HttpMethod","","`HttpMethod` defines supported HTTP methods.",null,null],[13,"Delete","","",4,null],[13,"Get","","",4,null],[13,"Head","","",4,null],[13,"Post","","",4,null],[13,"Put","","",4,null],[13,"Connect","","",4,null],[13,"Options","","",4,null],[13,"Trace","","",4,null],[13,"Copy","","",4,null],[13,"Lock","","",4,null],[13,"MKCol","","",4,null],[13,"Move","","",4,null],[13,"PropFind","","",4,null],[13,"PropPatch","","",4,null],[13,"Search","","",4,null],[13,"Unlock","","",4,null],[13,"Report","","",4,null],[13,"MKActivity","","",4,null],[13,"Checkout","","",4,null],[13,"Merge","","",4,null],[13,"MSearch","","",4,null],[13,"Notify","","",4,null],[13,"Subscribe","","",4,null],[13,"Unsubscribe","","",4,null],[13,"Patch","","",4,null],[13,"Purge","","",4,null],[13,"MKCalendar","","",4,null],[4,"ParseAction","","`ParseAction` defines the potential actions that could be returned by any callback function.\nThe parser uses it to determine consequent behavior.",null,null],[13,"None","","No special actions. Keep the normal execution.",5,null],[13,"SkipBody","","Skip body",5,null],[11,"clone","","",2,{"inputs":[{"name":"httpparsertype"}],"output":{"name":"httpparsertype"}}],[11,"eq","","",2,{"inputs":[{"name":"httpparsertype"},{"name":"httpparsertype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"httpparsertype"},{"name":"httpparsertype"}],"output":{"name":"bool"}}],[11,"new","","Creates a parser of the specified type.",0,{"inputs":[{"name":"httpparser"},{"name":"httpparsertype"}],"output":{"name":"httpparser"}}],[11,"execute","","Parses the HTTP requests or responses, specified in `data` as an array of bytes.",0,null],[11,"http_body_is_final","","Returns true if the HTTP body is final.",0,{"inputs":[{"name":"httpparser"}],"output":{"name":"bool"}}],[11,"pause","","Pauses the parser.",0,{"inputs":[{"name":"httpparser"},{"name":"bool"}],"output":null}],[11,"http_should_keep_alive","","Returns true if it needs to keep alive.",0,{"inputs":[{"name":"httpparser"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"httpversion"}],"output":{"name":"httpversion"}}],[11,"eq","","",1,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"httperrno"}],"output":{"name":"httperrno"}}],[11,"eq","","",3,{"inputs":[{"name":"httperrno"},{"name":"httperrno"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"httperrno"},{"name":"httperrno"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"httperrno"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"httpmethod"}],"output":{"name":"httpmethod"}}],[11,"eq","","",4,{"inputs":[{"name":"httpmethod"},{"name":"httpmethod"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"httpmethod"},{"name":"httpmethod"}],"output":{"name":"bool"}}],[11,"to_string","","",4,{"inputs":[{"name":"httpmethod"}],"output":{"name":"string"}}],[11,"clone","","",5,{"inputs":[{"name":"parseaction"}],"output":{"name":"parseaction"}}],[6,"CallbackResult","","Result of a callback function.",null,null],[8,"HttpParserCallback","","It defines the callback functions that would be called by parser.",null,null],[11,"on_message_begin","","Function called when starting parsing a new HTTP request or response.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}],[11,"on_url","","Function called when a URL is parsed.",6,null],[11,"on_status","","Function called when a status is parsed.",6,null],[11,"on_header_field","","Function called when a header field is parsed.",6,null],[11,"on_header_value","","Function called when a header value is parsed.",6,null],[11,"on_headers_complete","","Function called when all headers are parsed.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}],[11,"on_body","","Function called when the body is parsed.",6,null],[11,"on_message_complete","","Function called when finishing parsing a HTTP request or response.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}],[11,"on_message_begin","","Function called when starting parsing a new HTTP request or response.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}],[11,"on_url","","Function called when a URL is parsed.",6,null],[11,"on_status","","Function called when a status is parsed.",6,null],[11,"on_header_field","","Function called when a header field is parsed.",6,null],[11,"on_header_value","","Function called when a header value is parsed.",6,null],[11,"on_headers_complete","","Function called when all headers are parsed.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}],[11,"on_body","","Function called when the body is parsed.",6,null],[11,"on_message_complete","","Function called when finishing parsing a HTTP request or response.",6,{"inputs":[{"name":"httpparsercallback"},{"name":"httpparser"}],"output":{"name":"callbackresult"}}]],"paths":[[3,"HttpParser"],[3,"HttpVersion"],[4,"HttpParserType"],[4,"HttpErrno"],[4,"HttpMethod"],[4,"ParseAction"],[8,"HttpParserCallback"]]};
initSearch(searchIndex);
